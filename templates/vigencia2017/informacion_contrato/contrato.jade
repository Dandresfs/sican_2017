extends ../../inicio
block scroll_header_panel_title
    span(class="title") GRUPOS DE FORMACIÓN
block help_content
    p(class="title-help") Descripción:
    p.
block head_content_inicio
    link(rel="import",href="{% static 'bower_components/paper-button/paper-button.html'%}")
block custom_style_panel
    style(is="custom-style")
        | paper-button{
        |   margin-bottom:15px;
        | }
block breadcrum
    a(href="/proyectos/",class="link_button")
        paper-icon-item(class="breadcrumb-paper-icon-item-class") Inicio
            iron-icon(icon="check",item-icon)
    a(href="../../",class="link_button")
        paper-icon-item(class="breadcrumb-paper-icon-item-class") Listado de grupos de formación
            iron-icon(icon="check",item-icon)
    paper-icon-item(class="breadcrum_active",disabled) Información de contrato {{nombre_contrato}}
        iron-icon(icon="check",item-icon)
block scroll_header_panel_content
    div(class="container-fluid container-index")
        div(class="row")
            div(class="col-sm-11 col-sm-offset-1")
                h4(class="inline")
                    b Formador:
                h4(class="inline")  {{nombre_formador}}
        div(class="row",style="margin-top:20px;")
            div(class="col-sm-10 col-sm-offset-1")
                canvas(id="myChart")

block body_script_content
    script.
        $(document).ready(function () {


            Chart.pluginService.register({
                beforeRender: function (chart) {
                    if (chart.config.options.showAllTooltips) {
                        // create an array of tooltips
                        // we can't use the chart tooltip because there is only one tooltip per chart
                        chart.pluginTooltips = [];
                        chart.config.data.datasets.forEach(function (dataset, i) {
                            chart.getDatasetMeta(i).data.forEach(function (sector, j) {
                                chart.pluginTooltips.push(new Chart.Tooltip({
                                    _chart: chart.chart,
                                    _chartInstance: chart,
                                    _data: chart.data,
                                    _options: chart.options.tooltips,
                                    _active: [sector]
                                }, chart));
                            });
                        });

                        // turn off normal tooltips
                        chart.options.tooltips.enabled = false;
                    }
                },
                afterDraw: function (chart, easing) {
                    if (chart.config.options.showAllTooltips) {
                        // we don't want the permanent tooltips to animate, so don't do anything till the animation runs atleast once
                        if (!chart.allTooltipsOnce) {
                            if (easing !== 1)
                                return;
                            chart.allTooltipsOnce = true;
                        }

                        // turn on tooltips
                        chart.options.tooltips.enabled = true;
                        Chart.helpers.each(chart.pluginTooltips, function (tooltip) {
                            tooltip.initialize();
                            tooltip.update();
                            // we don't actually need this since we are not animating tooltips
                            tooltip.pivot();
                            tooltip.transition(easing).draw();
                        });
                        chart.options.tooltips.enabled = false;
                    }
                }
            });

            var ctx = document.getElementById("myChart").getContext('2d');
            var myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: [],
                    datasets: [{
                        label: '',
                        data: [],
                        backgroundColor: [],
                        borderColor: [],
                        borderWidth: 1
                    }]
                },
                options: {

                    scales: {
                        yAxes: [{
                            stacked: true,
                            ticks: {
                                beginAtZero: true,
                                max:0,
                                callback: function (value, index, values) {
                                    if (parseInt(value) >= 1000) {
                                        return '$' + value.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                    } else {
                                        return '$' + value;
                                    }
                                }
                            }
                        }],
                        xAxes: [{
                            stacked: true,
                        }],
                    },
                    tooltips: {
                        enabled: true,
                        mode: 'single',
                        callbacks: {
                            label: function (tooltipItems, data) {
                                return "$" + tooltipItems.yLabel.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                            }
                        }
                    },
                    annotation: {
                        annotations: [{
                            type: 'line',
                            mode: 'horizontal',
                            scaleID: 'y-axis-0',
                            value: 0,
                            borderColor: 'rgb(75, 192, 192)',
                            borderWidth: 4,
                            label: {
                                enabled: true,
                                content: ''
                            }
                        }]
                    }
                }
            });




            $.ajax({
                type: "GET",
                url: "/rest/vigencia_2017/informacion_contrato/?id_contrato={{ id_contrato }}",
                cache: false,
                success: function (data) {
                    myChart.data.labels = data.labels
                    myChart.data.datasets[0].data = data.data
                    myChart.data.datasets[0].backgroundColor = data.background_color
                    myChart.data.datasets[0].borderColor = data.border_color
                    myChart.data.datasets[0].label = data.label


                    myChart.options.annotation.annotations[0].value = data.valor_contrato
                    myChart.options.scales.yAxes[0].ticks.max = data.valor_contrato + data.valor_contrato/20
                    myChart.options.annotation.annotations[0].label.content = "Valor contrato: $" + data.valor_contrato.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")
                    myChart.update();
                }
            });

        });